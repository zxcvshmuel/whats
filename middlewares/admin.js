(function (_0x437747, _0x1673da) { const _0x39073a = _0x4dd9, _0x4c22f1 = _0x437747(); while (!![]) { try { const _0x1f7274 = -parseInt(_0x39073a(0x1fa)) / 0x1 * (-parseInt(_0x39073a(0x205)) / 0x2) + parseInt(_0x39073a(0x1fd)) / 0x3 * (-parseInt(_0x39073a(0x204)) / 0x4) + -parseInt(_0x39073a(0x200)) / 0x5 + parseInt(_0x39073a(0x1f6)) / 0x6 * (-parseInt(_0x39073a(0x1fe)) / 0x7) + parseInt(_0x39073a(0x1f5)) / 0x8 + parseInt(_0x39073a(0x202)) / 0x9 * (parseInt(_0x39073a(0x1fb)) / 0xa) + -parseInt(_0x39073a(0x1fc)) / 0xb; if (_0x1f7274 === _0x1673da) break; else _0x4c22f1['push'](_0x4c22f1['shift']()); } catch (_0x409fbc) { _0x4c22f1['push'](_0x4c22f1['shift']()); } } }(_0x4e59, 0x2e378)); function _0x4e59() { const _0x1cd1d0 = ['2839185jEFEJK', 'no_installed_jwt', '52XrPYZU', '646418FhZnwW', 'message', 'domain', 'hostname', '1119360scfHFA', '2922FeSdqE', 'json', 'no_installed_token', 'log', '1OkKQMh', '10JeDoeo', '3678378pabJjF', '50730ncAmEv', '49fAkVsm', 'Invalid\x20purchase\x20code\x20411', '158265PJwmIX', 'Invalid\x20purchase\x20code\x20412']; _0x4e59 = function () { return _0x1cd1d0; }; return _0x4e59(); } function _0x4dd9(_0x5485d2, _0x194cc6) { const _0x4e599e = _0x4e59(); return _0x4dd9 = function (_0x4dd956, _0x4a8087) { _0x4dd956 = _0x4dd956 - 0x1f4; let _0x456692 = _0x4e599e[_0x4dd956]; return _0x456692; }, _0x4dd9(_0x5485d2, _0x194cc6); } const con = require('../config/config'), jwt = require('jsonwebtoken'), awaitmysql = require('../function/awaitmysql'); module['exports'] = { 'issession': async (_0x4535bd, _0x2a4352, _0x3cfa54) => { const _0x64f374 = _0x4dd9, _0x46bef4 = _0x4535bd[_0x64f374(0x1f4)], _0x18f9e3 = _0x64f374(0x203), _0x5cbe31 = _0x64f374(0x1f8); if (!_0x18f9e3 || !_0x5cbe31) return _0x2a4352['json']({ 'msg': 'App\x20not\x20installed\x20yet\x20please\x20install\x20the\x20app' }); jwt['verify'](_0x5cbe31, _0x18f9e3, (_0x40592b, _0x4b48cf) => { const _0x2ab40a = _0x64f374; if (_0x40592b) { _0x2a4352[_0x2ab40a(0x1f7)]({ 'msg': _0x2ab40a(0x1ff) }), console[_0x2ab40a(0x1f9)]({ 'err': _0x40592b[_0x2ab40a(0x206)], 'msg': 'Invalid\x20purchase\x20code\x20411' }); return; } else { if (_0x46bef4 === _0x4b48cf[_0x2ab40a(0x207)]) _0x3cfa54(); else { _0x2a4352[_0x2ab40a(0x1f7)]({ 'msg': _0x2ab40a(0x201) }), console['log'](_0x2ab40a(0x201)); return; } } }); } };